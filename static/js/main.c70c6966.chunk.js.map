{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","Date","toDateString","variant","url","fetchData","a","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","App","state","fetchedData","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c70c6966.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3Xxrs\",\"card\":\"Cards_card__wHE0a\",\"infected\":\"Cards_infected__19s5-\",\"recovered\":\"Cards_recovered__1FStN\",\"deaths\":\"Cards_deaths__1Gczs\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    console.log(confirmed);\r\n    if(!confirmed){\r\n        return 'Loading......';\r\n    }\r\n    return (\r\n        <div className ={ styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className= {cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color =\"textSecondary\" gutterBottom> Infected </Typography>\r\n                        <Typography varaint =\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=','/>    \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className= {cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color =\"textSecondary\" gutterBottom> Recovered</Typography>\r\n                        <Typography varaint =\"h5\">\r\n                        <CountUp start={0} end={recovered.value} duration={2.5} separator=','/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className= {cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color =\"textSecondary\" gutterBottom> Deaths </Typography>\r\n                        <Typography varaint =\"h5\">\r\n                        <CountUp start={0} end={deaths.value} duration={2.5} separator=','/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of death cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>  \r\n )\r\n}\r\nexport default Cards;","import axios from  'axios';\r\n\r\nconst url ='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async () => {\r\n    try{\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url);\r\n       \r\n        return  { confirmed, recovered, deaths, lastUpdate }\r\n       \r\n    }catch (error){\r\n\r\n    }\r\n}\r\n export const fetchDailyData = async () =>{\r\n     try{\r\n         const { data } = await axios.get(`${url}/daily`);\r\n\r\n         const modifiedData = data.map((dailyData) => ({\r\n             confirmed: dailyData.confirmed.total,\r\n             deaths: dailyData.deaths.total,\r\n             date: dailyData.reportDate,\r\n         }));\r\n       return modifiedData;\r\n     }\r\n     catch (error){\r\n         console.log(error);\r\n\r\n     }\r\n }","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\nconst Chart = () => {\r\n    const [ dailyData, setDailyData ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        console.log(dailyData);\r\n        fetchAPI();\r\n    });\r\n\r\n    const lineChart =(\r\n        dailyData.length ? (<Line\r\n        data ={{\r\n            labels:dailyData.map(({ date }) => date),\r\n            datasets:[{\r\n                data : dailyData.map(({ confirmed }) => confirmed ),\r\n                label: 'Infected',\r\n                borderColor : '#3333ff',\r\n                fill : true,\r\n            }, \r\n            {\r\n                data : dailyData.map(({ deaths }) => deaths ),\r\n                label: 'deaths',\r\n                borderColor : 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                fill : true,\r\n            }],\r\n        }}\r\n        />) : null\r\n    );\r\n    return (\r\n       <div className ={ styles.container}>\r\n        {lineChart}\r\n        </div>  \r\n )\r\n}\r\nexport default Chart;","import React from 'react';\r\n\r\nconst CountryPicker = () => {\r\n    return (\r\n        <h1>\r\n            CountryPicker\r\n        </h1>   \r\n )\r\n}\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './Components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nclass App extends React.Component {\r\n    state ={\r\n        data: {},\r\n    }\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        \r\n        this.setState({ data: fetchedData});\r\n        }\r\n    \r\n    render() {\r\n        const { data } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <Cards data= {data}/>\r\n                <Chart />\r\n                <CountryPicker />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1Q6i9\"};"],"sourceRoot":""}