{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","Components/Chart/Chart.module.css","Components/CountryPicker/CountryPicker.module.css","images/COVID-19.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","Date","toDateString","variant","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","cornaImg","alt","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d7c6be2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3Xxrs\",\"card\":\"Cards_card__wHE0a\",\"infected\":\"Cards_infected__19s5-\",\"recovered\":\"Cards_recovered__1FStN\",\"deaths\":\"Cards_deaths__1Gczs\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    console.log(confirmed);\r\n    if(!confirmed){\r\n        return 'Loading......';\r\n    }\r\n    return (\r\n        <div className ={ styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className= {cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color =\"textSecondary\" gutterBottom> Infected </Typography>\r\n                        <Typography varaint =\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=','/>    \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className= {cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color =\"textSecondary\" gutterBottom> Recovered</Typography>\r\n                        <Typography varaint =\"h5\">\r\n                        <CountUp start={0} end={recovered.value} duration={2.5} separator=','/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className= {cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color =\"textSecondary\" gutterBottom> Deaths </Typography>\r\n                        <Typography varaint =\"h5\">\r\n                        <CountUp start={0} end={deaths.value} duration={2.5} separator=','/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of death cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>  \r\n )\r\n}\r\nexport default Cards;","import axios from  'axios';\r\n\r\nconst url ='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl =`${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n       \r\n        return  { confirmed, recovered, deaths, lastUpdate }\r\n       \r\n    }catch (error){\r\n        return error;\r\n\r\n    }\r\n}\r\n export const fetchDailyData = async () =>{\r\n     try{\r\n         const { data } = await axios.get(`${url}/daily`);\r\n\r\n         return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n         \r\n     }\r\n     catch (error){\r\n        return error;\r\n\r\n     }\r\n }\r\n\r\n export const fetchCountries = async () => {\r\n     try{\r\n         const { data: { countries }} = await axios.get(`${url}/countries`);\r\n         return countries.map((country) => country.name);\r\n     }catch(error){\r\n        return error;\r\n     }\r\n }","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData, fetchCountries } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}`},\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n  console.log(country);\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      \r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, {useState, useEffect } from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\n\r\nimport { fetchCountries }  from '../../api';\r\n\r\nconst Countries = ({handleCountryChange}) => {\r\n    const [countries, setCountries ] = useState([]);\r\n   \r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    return (\r\n       <FormControl className ={styles.FormControl}>\r\n           <NativeSelect  defaultValue =\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value =\"\">Global</option>\r\n                {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n       </FormControl>   \r\n )\r\n}\r\nexport default Countries;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './Components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport cornaImg  from '../src/images/COVID-19.png'\r\n\r\nclass App extends React.Component {\r\n    state ={\r\n        data: {},\r\n        country:'',\r\n    }\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        \r\n        this.setState({ data: fetchedData});\r\n        }\r\n        async componentDidMount() {\r\n            const fetchedData = await fetchData();\r\n            this.setState({ data: fetchedData});\r\n        }\r\n\r\n        handleCountryChange = async (country) => {\r\n            const fetchedData = await fetchData(country);\r\n            this.setState({ data: fetchedData, country:country});\r\n            console.log(fetchedData)\r\n            \r\n        }\r\n    \r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img  className={styles.image}src={ cornaImg} alt=\"covid-19\"/>\r\n                <Cards data= {data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country ={country}/>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1Q6i9\",\"image\":\"App_image__186C4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3C6x7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__tItLN\"};","module.exports = __webpack_public_path__ + \"static/media/COVID-19.7786bbd4.png\";"],"sourceRoot":""}